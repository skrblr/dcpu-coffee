// Generated by CoffeeScript 1.3.1
(function() {
  var Dcpu16Shell, cmd, dasm, dcpu, fs,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

  fs = require('fs');

  cmd = require('./cmd');

  dcpu = require('./dcpu');

  dasm = require('./dcpu-disasm');

  Dcpu16Shell = (function(_super) {

    __extends(Dcpu16Shell, _super);

    Dcpu16Shell.name = 'Dcpu16Shell';

    function Dcpu16Shell() {
      this.prompt = ">> ";
      this.dcpu = new dcpu.Dcpu16();
      this.dcpu.onPreExec(dasm.Disasm.ppInstr);
      this.intro = "\n*******************************************************\n* DCPU-16 Shell                                       *\n* Send Bugs to Tim Detwiler <timdetwiler@gamil.com>   *\n*******************************************************";
    }

    Dcpu16Shell.prototype.do_load = function(toks) {
      var cpu, fn;
      fn = toks[0];
      cpu = this.dcpu;
      return fs.readFile(fn, "utf8", function(err, data) {
        if (!err) {
          return cpu.loadBinary(eval(data));
        }
      });
    };

    Dcpu16Shell.prototype.do_step = function(toks) {
      return this.dcpu.step();
    };

    Dcpu16Shell.prototype.help_step = function() {
      return console.log("Executes a single DCPU-16 instruction");
    };

    return Dcpu16Shell;

  })(cmd.Cmd);

  new Dcpu16Shell().cmdloop();

}).call(this);
